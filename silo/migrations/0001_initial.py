# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-06-27 21:31
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import oauth2client.contrib.django_orm


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, max_length=255, verbose_name=b'Country Name')),
                ('code', models.CharField(blank=True, max_length=4, verbose_name=b'2 Letter Country Code')),
                ('description', models.TextField(blank=True, max_length=765, verbose_name=b'Description/Notes')),
                ('latitude', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Latitude')),
                ('longitude', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Longitude')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('country',),
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='DocumentationApp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('documentation', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(blank=True, null=True)),
                ('answer', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('page', models.CharField(max_length=135)),
                ('severity', models.CharField(max_length=135)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='GoogleCredentialsModel',
            fields=[
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='google_credentials', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('credential', oauth2client.contrib.django_orm.CredentialsField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MergedSilosFieldMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mapping', models.TextField()),
                ('create_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Read',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_name', models.CharField(blank=True, default=b'', max_length=100, verbose_name=b'source name')),
                ('autopull_frequency', models.CharField(blank=True, choices=[(b'DISABLED', b'Disabled'), (b'daily', b'Daily'), (b'weekly', b'Weekly')], max_length=25, null=True)),
                ('autopush_frequency', models.CharField(blank=True, choices=[(b'DISABLED', b'Disabled'), (b'daily', b'Daily'), (b'weekly', b'Weekly')], max_length=25, null=True)),
                ('description', models.TextField()),
                ('read_url', models.CharField(blank=True, default=b'', max_length=100, verbose_name=b'source url')),
                ('resource_id', models.CharField(blank=True, max_length=200, null=True)),
                ('username', models.CharField(blank=True, max_length=20, null=True)),
                ('token', models.CharField(blank=True, max_length=254, null=True)),
                ('file_data', models.FileField(blank=True, null=True, upload_to=b'uploads', verbose_name=b'Upload CSV File')),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('edit_date', models.DateTimeField(auto_now=True, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='ReadType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_type', models.CharField(blank=True, max_length=135)),
                ('description', models.CharField(blank=True, max_length=765)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('edit_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Silo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('public', models.BooleanField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reads', models.ManyToManyField(related_name='silos', to='silo.Read')),
                ('shared', models.ManyToManyField(blank=True, related_name='silos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('create_date',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ThirdPartyTokens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('token', models.CharField(max_length=255)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('edit_date', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tokens', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TolaSites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('agency_name', models.CharField(blank=True, max_length=255, null=True)),
                ('agency_url', models.CharField(blank=True, max_length=255, null=True)),
                ('activity_url', models.CharField(blank=True, max_length=255, null=True)),
                ('privacy_disclaimer', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='TolaUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, choices=[(b'mr', b'Mr.'), (b'mrs', b'Mrs.'), (b'ms', b'Ms.')], max_length=3, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Given Name')),
                ('employee_number', models.IntegerField(blank=True, null=True, verbose_name=b'Employee Number')),
                ('activity_api_token', models.CharField(blank=True, max_length=255, null=True)),
                ('privacy_disclaimer_accepted', models.BooleanField(default=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='silo.Country')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tola_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UniqueFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('silo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unique_fields', to='silo.Silo')),
            ],
        ),
        migrations.AddField(
            model_name='silo',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='silos', to='silo.Tag'),
        ),
        migrations.AddField(
            model_name='read',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='silo.ReadType'),
        ),
        migrations.AddField(
            model_name='mergedsilosfieldmapping',
            name='from_silo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_mappings', to='silo.Silo'),
        ),
        migrations.AddField(
            model_name='mergedsilosfieldmapping',
            name='merged_silo',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='merged_silo_mappings', to='silo.Silo'),
        ),
        migrations.AddField(
            model_name='mergedsilosfieldmapping',
            name='to_silo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_mappings', to='silo.Silo'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='submitter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
